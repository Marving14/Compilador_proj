
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIDCALLBEGINIFWHILErightPROCEDURErightVARrightASSIGNrightUPDATEleftNEleftLESSGREATERleftPLUSMINUSrightODDleftLPARENTRPARENTASSIGN BEGIN CALL COMMA CONST DIVIDE DO DOT ELSE END GREATER ID IF IN LESS LPARENT MINUS NE NUMBER ODD OUT PLUS PROCEDURE RPARENT SEMMICOLOM THEN TIMES UPDATE VAR WHILEprogram : blockblock :  constDecl varDecl procDecl statementconstDecl : CONST constAssignmentList SEMMICOLOMconstDecl : emptyconstAssignmentList : ID ASSIGN NUMBERconstAssignmentList : constAssignmentList COMMA ID ASSIGN NUMBERvarDecl : VAR identList SEMMICOLOMvarDecl : emptyidentList : IDidentList : identList COMMA IDprocDecl : procDecl PROCEDURE ID SEMMICOLOM block SEMMICOLOM procDecl : emptystatement : ID UPDATE expressionstatement : CALL IDstatement : BEGIN statementList ENDstatement : IF condition THEN statementstatement : WHILE condition DO statementstatement : emptystatementList : statementstatementList : statementList SEMMICOLOM statementcondition : ODD expressioncondition : expression relation expressionrelation : ASSIGNrelation : NErelation : LESSrelation : GREATERexpression : termexpression : addingOperator termexpression : expression addingOperator termterm : factorterm : term multiplyingOperator factoraddingOperator : PLUSaddingOperator : MINUSmultiplyingOperator : TIMESmultiplyingOperator : DIVIDEfactor : IDfactor : NUMBERfactor : LPARENT expression RPARENTempty :'
    
_lr_action_items = {'CONST':([0,49,],[4,4,]),'VAR':([0,3,5,15,49,],[-39,7,-4,-3,-39,]),'PROCEDURE':([0,3,5,6,8,11,12,15,26,49,76,],[-39,-39,-4,-39,-8,19,-12,-3,-7,-39,-11,]),'ID':([0,3,4,5,6,7,8,11,12,15,16,19,21,22,23,24,26,27,31,36,39,41,42,45,49,52,53,55,56,57,58,59,60,61,62,63,66,76,],[-39,-39,10,-4,-39,14,-8,20,-12,-3,28,30,32,20,43,43,-7,47,43,43,43,-32,-33,43,-39,20,20,43,43,-23,-24,-25,-26,43,-34,-35,20,-11,]),'CALL':([0,3,5,6,8,11,12,15,22,26,49,52,53,66,76,],[-39,-39,-4,-39,-8,21,-12,-3,21,-7,-39,21,21,21,-11,]),'BEGIN':([0,3,5,6,8,11,12,15,22,26,49,52,53,66,76,],[-39,-39,-4,-39,-8,22,-12,-3,22,-7,-39,22,22,22,-11,]),'IF':([0,3,5,6,8,11,12,15,22,26,49,52,53,66,76,],[-39,-39,-4,-39,-8,23,-12,-3,23,-7,-39,23,23,23,-11,]),'WHILE':([0,3,5,6,8,11,12,15,22,26,49,52,53,66,76,],[-39,-39,-4,-39,-8,24,-12,-3,24,-7,-39,24,24,24,-11,]),'$end':([0,1,2,3,5,6,8,11,12,15,18,25,26,32,38,40,43,44,50,51,53,64,66,70,72,73,74,75,76,],[-39,0,-1,-39,-4,-39,-8,-39,-12,-3,-2,-18,-7,-14,-27,-30,-36,-37,-13,-15,-39,-28,-39,-16,-29,-31,-38,-17,-11,]),'SEMMICOLOM':([3,5,6,8,9,11,12,13,14,15,18,22,25,26,29,30,32,33,34,38,40,43,44,47,49,50,51,52,53,64,66,67,68,69,70,72,73,74,75,76,],[-39,-4,-39,-8,15,-39,-12,26,-9,-3,-2,-39,-18,-7,-5,49,-14,52,-19,-27,-30,-36,-37,-10,-39,-13,-15,-39,-39,-28,-39,-6,76,-20,-16,-29,-31,-38,-17,-11,]),'COMMA':([9,13,14,29,47,67,],[16,27,-9,-5,-10,-6,]),'ASSIGN':([10,28,37,38,40,43,44,64,72,73,74,],[17,48,57,-27,-30,-36,-37,-28,-29,-31,-38,]),'NUMBER':([17,23,24,31,36,39,41,42,45,48,55,56,57,58,59,60,61,62,63,],[29,44,44,44,44,44,-32,-33,44,67,44,44,-23,-24,-25,-26,44,-34,-35,]),'UPDATE':([20,],[31,]),'END':([22,25,32,33,34,38,40,43,44,50,51,52,53,64,66,69,70,72,73,74,75,],[-39,-18,-14,51,-19,-27,-30,-36,-37,-13,-15,-39,-39,-28,-39,-20,-16,-29,-31,-38,-17,]),'ODD':([23,24,],[36,36,]),'PLUS':([23,24,31,36,37,38,40,43,44,45,50,54,55,57,58,59,60,64,65,71,72,73,74,],[41,41,41,41,41,-27,-30,-36,-37,41,41,41,41,-23,-24,-25,-26,-28,41,41,-29,-31,-38,]),'MINUS':([23,24,31,36,37,38,40,43,44,45,50,54,55,57,58,59,60,64,65,71,72,73,74,],[42,42,42,42,42,-27,-30,-36,-37,42,42,42,42,-23,-24,-25,-26,-28,42,42,-29,-31,-38,]),'LPARENT':([23,24,31,36,39,41,42,45,55,56,57,58,59,60,61,62,63,],[45,45,45,45,45,-32,-33,45,45,45,-23,-24,-25,-26,45,-34,-35,]),'THEN':([35,38,40,43,44,54,64,71,72,73,74,],[53,-27,-30,-36,-37,-21,-28,-22,-29,-31,-38,]),'NE':([37,38,40,43,44,64,72,73,74,],[58,-27,-30,-36,-37,-28,-29,-31,-38,]),'LESS':([37,38,40,43,44,64,72,73,74,],[59,-27,-30,-36,-37,-28,-29,-31,-38,]),'GREATER':([37,38,40,43,44,64,72,73,74,],[60,-27,-30,-36,-37,-28,-29,-31,-38,]),'DO':([38,40,43,44,46,54,64,71,72,73,74,],[-27,-30,-36,-37,66,-21,-28,-22,-29,-31,-38,]),'RPARENT':([38,40,43,44,64,65,72,73,74,],[-27,-30,-36,-37,-28,74,-29,-31,-38,]),'TIMES':([38,40,43,44,64,72,73,74,],[62,-30,-36,-37,62,62,-31,-38,]),'DIVIDE':([38,40,43,44,64,72,73,74,],[63,-30,-36,-37,63,63,-31,-38,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'block':([0,49,],[2,68,]),'constDecl':([0,49,],[3,3,]),'empty':([0,3,6,11,22,49,52,53,66,],[5,8,12,25,25,5,25,25,25,]),'varDecl':([3,],[6,]),'constAssignmentList':([4,],[9,]),'procDecl':([6,],[11,]),'identList':([7,],[13,]),'statement':([11,22,52,53,66,],[18,34,69,70,75,]),'statementList':([22,],[33,]),'condition':([23,24,],[35,46,]),'expression':([23,24,31,36,45,55,],[37,37,50,54,65,71,]),'term':([23,24,31,36,39,45,55,56,],[38,38,38,38,64,38,38,72,]),'addingOperator':([23,24,31,36,37,45,50,54,55,65,71,],[39,39,39,39,56,39,56,56,39,56,56,]),'factor':([23,24,31,36,39,45,55,56,61,],[40,40,40,40,40,40,40,40,73,]),'relation':([37,],[55,]),'multiplyingOperator':([38,64,72,],[61,61,61,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> block','program',1,'p_program','analizadorSintactico.py',24),
  ('block -> constDecl varDecl procDecl statement','block',4,'p_block','analizadorSintactico.py',29),
  ('constDecl -> CONST constAssignmentList SEMMICOLOM','constDecl',3,'p_constDecl','analizadorSintactico.py',33),
  ('constDecl -> empty','constDecl',1,'p_constDeclEmpty','analizadorSintactico.py',37),
  ('constAssignmentList -> ID ASSIGN NUMBER','constAssignmentList',3,'p_constAssignmentList','analizadorSintactico.py',42),
  ('constAssignmentList -> constAssignmentList COMMA ID ASSIGN NUMBER','constAssignmentList',5,'p_constAssignmentList2','analizadorSintactico.py',46),
  ('varDecl -> VAR identList SEMMICOLOM','varDecl',3,'p_varDecl1','analizadorSintactico.py',52),
  ('varDecl -> empty','varDecl',1,'p_varDeclEmpty','analizadorSintactico.py',56),
  ('identList -> ID','identList',1,'p_identList1','analizadorSintactico.py',60),
  ('identList -> identList COMMA ID','identList',3,'p_identList2','analizadorSintactico.py',63),
  ('procDecl -> procDecl PROCEDURE ID SEMMICOLOM block SEMMICOLOM','procDecl',6,'p_procDecl1','analizadorSintactico.py',67),
  ('procDecl -> empty','procDecl',1,'p_procDeclEmpty','analizadorSintactico.py',71),
  ('statement -> ID UPDATE expression','statement',3,'p_statement1','analizadorSintactico.py',75),
  ('statement -> CALL ID','statement',2,'p_statement2','analizadorSintactico.py',79),
  ('statement -> BEGIN statementList END','statement',3,'p_statement3','analizadorSintactico.py',83),
  ('statement -> IF condition THEN statement','statement',4,'p_statement4','analizadorSintactico.py',87),
  ('statement -> WHILE condition DO statement','statement',4,'p_statement5','analizadorSintactico.py',91),
  ('statement -> empty','statement',1,'p_statementEmpty','analizadorSintactico.py',95),
  ('statementList -> statement','statementList',1,'p_statementList1','analizadorSintactico.py',99),
  ('statementList -> statementList SEMMICOLOM statement','statementList',3,'p_statementList2','analizadorSintactico.py',103),
  ('condition -> ODD expression','condition',2,'p_condition1','analizadorSintactico.py',107),
  ('condition -> expression relation expression','condition',3,'p_condition2','analizadorSintactico.py',111),
  ('relation -> ASSIGN','relation',1,'p_relation1','analizadorSintactico.py',115),
  ('relation -> NE','relation',1,'p_relation2','analizadorSintactico.py',119),
  ('relation -> LESS','relation',1,'p_relation3','analizadorSintactico.py',123),
  ('relation -> GREATER','relation',1,'p_relation4','analizadorSintactico.py',127),
  ('expression -> term','expression',1,'p_expression1','analizadorSintactico.py',131),
  ('expression -> addingOperator term','expression',2,'p_expression2','analizadorSintactico.py',135),
  ('expression -> expression addingOperator term','expression',3,'p_expression3','analizadorSintactico.py',139),
  ('term -> factor','term',1,'p_term1','analizadorSintactico.py',143),
  ('term -> term multiplyingOperator factor','term',3,'p_term2','analizadorSintactico.py',147),
  ('addingOperator -> PLUS','addingOperator',1,'p_addingOperator1','analizadorSintactico.py',151),
  ('addingOperator -> MINUS','addingOperator',1,'p_addingOperator2','analizadorSintactico.py',154),
  ('multiplyingOperator -> TIMES','multiplyingOperator',1,'p_multiplyingOperator1','analizadorSintactico.py',158),
  ('multiplyingOperator -> DIVIDE','multiplyingOperator',1,'p_multiplyingOperator2','analizadorSintactico.py',162),
  ('factor -> ID','factor',1,'p_factor1','analizadorSintactico.py',166),
  ('factor -> NUMBER','factor',1,'p_factor2','analizadorSintactico.py',170),
  ('factor -> LPARENT expression RPARENT','factor',3,'p_factor3','analizadorSintactico.py',174),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',178),
]
